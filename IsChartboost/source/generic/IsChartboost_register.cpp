/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "IsChartboost_autodefs.h"
#include "s3eEdk.h"
#include "IsChartboost.h"
//Declarations of Init and Term functions
extern s3eResult IsChartboostInit();
extern void IsChartboostTerminate();


// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static void IsChartboostSetAppID_wrap(const char* id)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost func on main thread: IsChartboostSetAppID"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)IsChartboostSetAppID, 1, id);
}

static void IsChartboostSetAppSignature_wrap(const char* signature)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost func on main thread: IsChartboostSetAppSignature"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)IsChartboostSetAppSignature, 1, signature);
}

static void IsChartboostStartSession_wrap()
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost func on main thread: IsChartboostStartSession"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)IsChartboostStartSession, 0);
}

static void IsChartboostRequestAd_wrap()
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost func on main thread: IsChartboostRequestAd"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)IsChartboostRequestAd, 0);
}

static void IsChartboostCacheInterstitial_wrap(const char* name)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost func on main thread: IsChartboostCacheInterstitial"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)IsChartboostCacheInterstitial, 1, name);
}

static void IsChartboostShowInterstitial_wrap(const char* name)
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost func on main thread: IsChartboostShowInterstitial"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)IsChartboostShowInterstitial, 1, name);
}

static void IsChartboostCacheMoreApps_wrap()
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost func on main thread: IsChartboostCacheMoreApps"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)IsChartboostCacheMoreApps, 0);
}

static void IsChartboostShowMoreApps_wrap()
{
    IwTrace(ISCHARTBOOST_VERBOSE, ("calling IsChartboost func on main thread: IsChartboostShowMoreApps"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)IsChartboostShowMoreApps, 0);
}

#define IsChartboostSetAppID IsChartboostSetAppID_wrap
#define IsChartboostSetAppSignature IsChartboostSetAppSignature_wrap
#define IsChartboostStartSession IsChartboostStartSession_wrap
#define IsChartboostRequestAd IsChartboostRequestAd_wrap
#define IsChartboostCacheInterstitial IsChartboostCacheInterstitial_wrap
#define IsChartboostShowInterstitial IsChartboostShowInterstitial_wrap
#define IsChartboostCacheMoreApps IsChartboostCacheMoreApps_wrap
#define IsChartboostShowMoreApps IsChartboostShowMoreApps_wrap

#endif

s3eResult IsChartboostRegister(IsChartboostCallback cbid, s3eCallback fn, void* pData)
{
    return s3eEdkCallbacksRegister(S3E_EXT_ISCHARTBOOST_HASH, ISCHARTBOOST_CALLBACK_MAX, cbid, fn, pData, 0);
};

s3eResult IsChartboostUnRegister(IsChartboostCallback cbid, s3eCallback fn)
{
    return s3eEdkCallbacksUnRegister(S3E_EXT_ISCHARTBOOST_HASH, ISCHARTBOOST_CALLBACK_MAX, cbid, fn);
}

void IsChartboostRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[10];
    funcPtrs[0] = (void*)IsChartboostRegister;
    funcPtrs[1] = (void*)IsChartboostUnRegister;
    funcPtrs[2] = (void*)IsChartboostSetAppID;
    funcPtrs[3] = (void*)IsChartboostSetAppSignature;
    funcPtrs[4] = (void*)IsChartboostStartSession;
    funcPtrs[5] = (void*)IsChartboostRequestAd;
    funcPtrs[6] = (void*)IsChartboostCacheInterstitial;
    funcPtrs[7] = (void*)IsChartboostShowInterstitial;
    funcPtrs[8] = (void*)IsChartboostCacheMoreApps;
    funcPtrs[9] = (void*)IsChartboostShowMoreApps;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[10] = { 0 };

    /*
     * Register the extension
     */
    s3eEdkRegister("IsChartboost", funcPtrs, sizeof(funcPtrs), flags, IsChartboostInit, IsChartboostTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int IsChartboostStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&IsChartboostRegisterExt;
    return 0;
}

int g_IsChartboostVal = IsChartboostStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    IsChartboostRegisterExt();
}
#endif

#endif
