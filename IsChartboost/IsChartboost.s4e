callbacks 
include:

//	IsChartboost Extension: Provides basic marmalade bindings for the cross-promotion
//	advertising library library from www.charhoost.com
//	Copyright (C) 2012 by 1013 Limited.
//
//  ===================================================
//  IsChartboost v0.2
//  ===================================================
//	Chartboost Android Version: 3.1.3
//	Chartboost IOS Version: 3.2.1
//  Targetting Marmalade SDK: 6.3.0


#include <s3eTypes.h>


// IsChartboost Callbacks available for registering
enum IsChartboostCallback
{
	ISCHARTBOOST_CALLBACK_REQUEST_RESPONSE,
	ISCHARTBOOST_CALLBACK_AD_CLOSED,
	ISCHARTBOOST_CALLBACK_AD_DISMISSED,
	ISCHARTBOOST_CALLBACK_AD_CLICKED,
	ISCHARTBOOST_CALLBACK_MAX,

};


functions:

/**
* Sets the Application ID which will be used for chartboost.
* @note alternatively this can be set by icf '[IsChartboost] AndroidAppID=', but this function call will take priority
* over the icf setting.
* @par Required Header Files
* IsChartboost.h
*/
void IsChartboostSetAppID(const char* id) run_on_os_thread

/**
* Sets the Application Signature which will be used for chartboost.
* @note alternatively this can be set by icf '[IsChartboost] AndroidAppSignature=', but this function call will take priority
* over the icf setting.
* @par Required Header Files
* @deprecated in 2.0 ICF Setting , see Documentation or /docs/app.config.txt
* IsChartboost.h
*/
void IsChartboostSetAppSignature(const char* signature) run_on_os_thread


/**
* Starts the IsChartboost session, should be called only once.
* @par Required Header Files
* IsChartboost.h
* @deprecated in 2.0 use ICF Setting , see Documentation or /docs/app.config.txt
*/
void IsChartboostStartSession() run_on_os_thread

/**
* Requests an advertisement from chartboost does not show it.
* @see IsChartboostCallback, S3E_CHARTBOOST_CALLBACK_REQUEST_RESPONSE
* @note IsChartboostShowInterstitial will be called internally, then the callback will be initiated.
* if an interstitial was given then IsChartboostCacheInterstitial will be called internally.
* 0 returned on success, 1 or highier on failure.
* @par Required Header Files
* IsChartboost.h
*/
void IsChartboostRequestAd() run_on_os_thread

/**
* Cache the interstial that was given.
* @param name interstitial name to cache.
* @note read help.chartboost.com/documentation for usage.
* @par Required Header Files
* IsChartboost.h
*/

void IsChartboostCacheInterstitial(const char* name) run_on_os_thread

/**
* Request and show an interstitial.
* @param name interstitial name to request.
* @note read help.chartboost.com/documentation for usage. If no name is given, a default interstitial will be shown
* @par Required Header Files
* IsChartboost.h
*/
void IsChartboostShowInterstitial(const char* name) run_on_os_thread

/**
* IsChartboostCacheMoreApps
* @par Required Header Files
* IsChartboost.h
*/

void IsChartboostCacheMoreApps() run_on_os_thread

/**
* IsChartboostShowMoreApps
* @par Required Header Files
* IsChartboost.h
*/
void IsChartboostShowMoreApps() run_on_os_thread
